- [X] **Starting point**
  - [X] text is in C#
  - [X] all UT are green
  - [X] the program behaves as expected (intermediate approval test)
- [X] **Data Layer**
  - [X] responsibility of this layer is to represent boundaries of the movement rectangle and balls
  - [X] balls representation are independent and self-contained (no timer required)
  - [X] balls implementation uses concurrent programming
- [X] **Logic Layer**
  - [X] responsibility of this layer is to manage movement rectangle boundaries and balls interaction (collisions)
  - [X] prove that the protection  of data integration is implemented
  - [X] `Logic` uses only the abstract `Data` layer API
- [X] **Presentation Layer (MVVM)**
  - [X] responsibility of this layer is to manage the graphical user interface (GUI)
  - [X] user => GUI interoperability must be implemented using interactive programming only
  - [X] GUI => the user interoperability must be implemented using reactive programming only (timer is not allowed)
  - [X] interoperability of the GUI and underlying layers must be synchronized
- [X] Fulfill functional requirements of the task
- [ ] **Testing**
  - [x] Unit Test - layers are tested independently using dependency injection (additional framework is not required)
  - [ ] Mock may be used for testing purposes (expected but not required)
